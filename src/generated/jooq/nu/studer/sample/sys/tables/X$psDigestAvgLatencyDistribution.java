/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.sys.tables;


import java.math.BigInteger;

import nu.studer.sample.sys.Sys;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$psDigestAvgLatencyDistribution extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>sys.x$ps_digest_avg_latency_distribution</code>
     */
    public static final X$psDigestAvgLatencyDistribution X$PS_DIGEST_AVG_LATENCY_DISTRIBUTION = new X$psDigestAvgLatencyDistribution();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>sys.x$ps_digest_avg_latency_distribution.cnt</code>.
     */
    public final TableField<Record, Long> CNT = createField(DSL.name("cnt"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>sys.x$ps_digest_avg_latency_distribution.avg_us</code>.
     */
    public final TableField<Record, BigInteger> AVG_US = createField(DSL.name("avg_us"), SQLDataType.DECIMAL_INTEGER(21), this, "");

    private X$psDigestAvgLatencyDistribution(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private X$psDigestAvgLatencyDistribution(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `x$ps_digest_avg_latency_distribution` as select count(0) AS `cnt`,round((`performance_schema`.`events_statements_summary_by_digest`.`AVG_TIMER_WAIT` / 1000000),0) AS `avg_us` from `performance_schema`.`events_statements_summary_by_digest` group by `avg_us`"));
    }

    /**
     * Create an aliased <code>sys.x$ps_digest_avg_latency_distribution</code>
     * table reference
     */
    public X$psDigestAvgLatencyDistribution(String alias) {
        this(DSL.name(alias), X$PS_DIGEST_AVG_LATENCY_DISTRIBUTION);
    }

    /**
     * Create an aliased <code>sys.x$ps_digest_avg_latency_distribution</code>
     * table reference
     */
    public X$psDigestAvgLatencyDistribution(Name alias) {
        this(alias, X$PS_DIGEST_AVG_LATENCY_DISTRIBUTION);
    }

    /**
     * Create a <code>sys.x$ps_digest_avg_latency_distribution</code> table
     * reference
     */
    public X$psDigestAvgLatencyDistribution() {
        this(DSL.name("x$ps_digest_avg_latency_distribution"), null);
    }

    public <O extends Record> X$psDigestAvgLatencyDistribution(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, X$PS_DIGEST_AVG_LATENCY_DISTRIBUTION);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Sys.SYS;
    }

    @Override
    public X$psDigestAvgLatencyDistribution as(String alias) {
        return new X$psDigestAvgLatencyDistribution(DSL.name(alias), this);
    }

    @Override
    public X$psDigestAvgLatencyDistribution as(Name alias) {
        return new X$psDigestAvgLatencyDistribution(alias, this);
    }

    @Override
    public X$psDigestAvgLatencyDistribution as(Table<?> alias) {
        return new X$psDigestAvgLatencyDistribution(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public X$psDigestAvgLatencyDistribution rename(String name) {
        return new X$psDigestAvgLatencyDistribution(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$psDigestAvgLatencyDistribution rename(Name name) {
        return new X$psDigestAvgLatencyDistribution(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$psDigestAvgLatencyDistribution rename(Table<?> name) {
        return new X$psDigestAvgLatencyDistribution(name.getQualifiedName(), null);
    }
}
