/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.performance_schema.tables;


import nu.studer.sample.performance_schema.Keys;
import nu.studer.sample.performance_schema.PerformanceSchema;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionStatus extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>performance_schema.session_status</code>
     */
    public static final SessionStatus SESSION_STATUS = new SessionStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>performance_schema.session_status.VARIABLE_NAME</code>.
     */
    public final TableField<Record, String> VARIABLE_NAME = createField(DSL.name("VARIABLE_NAME"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.session_status.VARIABLE_VALUE</code>.
     */
    public final TableField<Record, String> VARIABLE_VALUE = createField(DSL.name("VARIABLE_VALUE"), SQLDataType.VARCHAR(1024), this, "");

    private SessionStatus(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private SessionStatus(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>performance_schema.session_status</code> table
     * reference
     */
    public SessionStatus(String alias) {
        this(DSL.name(alias), SESSION_STATUS);
    }

    /**
     * Create an aliased <code>performance_schema.session_status</code> table
     * reference
     */
    public SessionStatus(Name alias) {
        this(alias, SESSION_STATUS);
    }

    /**
     * Create a <code>performance_schema.session_status</code> table reference
     */
    public SessionStatus() {
        this(DSL.name("session_status"), null);
    }

    public <O extends Record> SessionStatus(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SESSION_STATUS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.KEY_SESSION_STATUS_PRIMARY;
    }

    @Override
    public SessionStatus as(String alias) {
        return new SessionStatus(DSL.name(alias), this);
    }

    @Override
    public SessionStatus as(Name alias) {
        return new SessionStatus(alias, this);
    }

    @Override
    public SessionStatus as(Table<?> alias) {
        return new SessionStatus(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionStatus rename(String name) {
        return new SessionStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionStatus rename(Name name) {
        return new SessionStatus(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionStatus rename(Table<?> name) {
        return new SessionStatus(name.getQualifiedName(), null);
    }
}
